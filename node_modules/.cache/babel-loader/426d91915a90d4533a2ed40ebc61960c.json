{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henrique.garcia\\\\React JS Projects\\\\weather_app\\\\src\\\\Components\\\\weatherCard.js\";\nimport React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { Card, CardContent, CardActions, Button, Typography, List, Avatar } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction assignAvatar() {}\n\nclass WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async () => {\n      await Axios.get(\"https://api.openweathermap.org/data/2.5/forecast?q=Lisbon&appid=c9f6971381650cd6d35447c475cce567&units=metric\").then(response => {\n        console.log(response.data.list[0].weather[0].icon);\n        this.setState({\n          city: response.data.city.name,\n          list: response.data.list,\n          temp: response.data.list[0].main.temp,\n          weatherIcon: response.data.list[0].weather[0].icon\n        });\n      });\n    };\n\n    this.state = {\n      city: null,\n      list: [],\n      temp: null,\n      weatherIcon: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getWeather();\n    console.log(this.state.weatherIcon);\n    this.assignIcon();\n  }\n\n  assignIcon(props) {\n    const weatherState = useState(props.weatherIcon);\n    var url = \"http://openweathermap.org/img/wn/\" + weatherState + \"@2x.png\";\n    console.log(url);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minWidth: 275\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: 14\n            },\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: this.state.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: this.state.temp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WeatherCard;","map":{"version":3,"sources":["C:/Users/henrique.garcia/React JS Projects/weather_app/src/Components/weatherCard.js"],"names":["React","useState","Axios","Card","CardContent","CardActions","Button","Typography","List","Avatar","assignAvatar","WeatherCard","Component","constructor","props","getWeather","get","then","response","console","log","data","list","weather","icon","setState","city","name","temp","main","weatherIcon","state","componentDidMount","assignIcon","weatherState","url","render","minWidth","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,IADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,IANF,EAOEC,MAPF,QAQO,eARP;;;AAUA,SAASC,YAAT,GAAwB,CAAE;;AAE1B,MAAMC,WAAN,SAA0BX,KAAK,CAACY,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,UAhBmB,GAgBN,YAAY;AACvB,YAAMb,KAAK,CAACc,GAAN,CACJ,+GADI,EAEJC,IAFI,CAEEC,QAAD,IAAc;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,CAA9B,EAAiCC,IAA7C;AACA,aAAKC,QAAL,CAAc;AACZC,UAAAA,IAAI,EAAER,QAAQ,CAACG,IAAT,CAAcK,IAAd,CAAmBC,IADb;AAEZL,UAAAA,IAAI,EAAEJ,QAAQ,CAACG,IAAT,CAAcC,IAFR;AAGZM,UAAAA,IAAI,EAAEV,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmB,CAAnB,EAAsBO,IAAtB,CAA2BD,IAHrB;AAIZE,UAAAA,WAAW,EAAEZ,QAAQ,CAACG,IAAT,CAAcC,IAAd,CAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,CAA9B,EAAiCC;AAJlC,SAAd;AAMD,OAVK,CAAN;AAWD,KA5BkB;;AAEjB,SAAKO,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,IADK;AAEXJ,MAAAA,IAAI,EAAE,EAFK;AAGXM,MAAAA,IAAI,EAAE,IAHK;AAIXE,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,UAAL;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKW,KAAL,CAAWD,WAAvB;AACA,SAAKG,UAAL;AACD;;AAgBDA,EAAAA,UAAU,CAACnB,KAAD,EAAQ;AAChB,UAAMoB,YAAY,GAAGjC,QAAQ,CAACa,KAAK,CAACgB,WAAP,CAA7B;AACA,QAAIK,GAAG,GAAG,sCAAsCD,YAAtC,GAAqD,SAA/D;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAA,+BACE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,EAAE,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aADN;AAEE,YAAA,KAAK,EAAC,gBAFR;AAGE,YAAA,YAAY,MAHd;AAAA,sBAKG,KAAKP,KAAL,CAAWL;AALd;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBARF,eASE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA,sBAA6B,KAAKK,KAAL,CAAWH;AAAxC;AAAA;AAAA;AAAA;AAAA,kBATF,eAUE;AAAK,YAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAxDuC;;AA2D1C,eAAejB,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Typography,\r\n  List,\r\n  Avatar,\r\n} from \"@mui/material\";\r\n\r\nfunction assignAvatar() {}\r\n\r\nclass WeatherCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: null,\r\n      list: [],\r\n      temp: null,\r\n      weatherIcon: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getWeather();\r\n    console.log(this.state.weatherIcon);\r\n    this.assignIcon();\r\n  }\r\n\r\n  getWeather = async () => {\r\n    await Axios.get(\r\n      \"https://api.openweathermap.org/data/2.5/forecast?q=Lisbon&appid=c9f6971381650cd6d35447c475cce567&units=metric\"\r\n    ).then((response) => {\r\n      console.log(response.data.list[0].weather[0].icon);\r\n      this.setState({\r\n        city: response.data.city.name,\r\n        list: response.data.list,\r\n        temp: response.data.list[0].main.temp,\r\n        weatherIcon: response.data.list[0].weather[0].icon\r\n      });\r\n    });\r\n  }\r\n\r\n  assignIcon(props) {\r\n    const weatherState = useState(props.weatherIcon);\r\n    var url = \"http://openweathermap.org/img/wn/\" + weatherState + \"@2x.png\";\r\n    console.log(url);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card sx={{ minWidth: 275 }}>\r\n          <CardContent>\r\n            <Typography\r\n              sx={{ fontSize: 14 }}\r\n              color=\"text.secondary\"\r\n              gutterBottom\r\n            >\r\n              {this.state.city}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"div\"></Typography>\r\n            <Typography variant=\"body2\">{this.state.temp}</Typography>\r\n            <img src=\"\"></img>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherCard;\r\n"]},"metadata":{},"sourceType":"module"}