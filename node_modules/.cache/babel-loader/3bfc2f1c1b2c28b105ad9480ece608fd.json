{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\henrique.garcia\\\\React JS Projects\\\\weather_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport \"./App.css\";\nimport WeatherCards from \"./Components/weatherCards\";\nimport { useEffect, useState } from \"react\";\nimport { Oval } from \"react-loader-spinner\";\nimport $ from \"jquery\";\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [weather, setWeather] = useState({});\n  const [country, setCountry] = useState(\"PT\");\n  const [region, setRegion] = useState(\"Lisboa\");\n  const [time, setTime] = useState(0);\n\n  const fetchWeather = async () => {\n    console.log(country);\n    return axios.post(\"http://localhost:8000/weather\", {\n      regionReq: `${region}`,\n      countryReq: `${country}`\n    }).then(async response => {\n      const data = await response.data;\n      console.log(data);\n      return data;\n    }).catch(error => {\n      console.error(\"Error!\", error);\n    });\n  };\n\n  const getWeather = async () => {\n    const weatherApi = await fetchWeather();\n    setWeather(weatherApi);\n  };\n\n  useEffect(() => {\n    //Clear weather array\n    setWeather({}); //API request for weather info\n\n    getWeather(); //Refresh page every 5 minutes\n\n    const interval = setInterval(() => {\n      setTime(time + 1);\n    }, 350000);\n    return () => clearInterval(interval);\n  }, [time, region]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        children: \"WeatherApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"SubTitle\",\n      children: \"5 Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"SelectRegion\",\n      children: \"Select a region: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CountryDropdown, {\n        valueType: \"short\",\n        value: country,\n        onChange: val => setCountry(val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegionDropdown, {\n        countryValueType: \"short\",\n        country: country,\n        value: region,\n        onChange: val => setRegion(val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: $.isEmptyObject(weather) ? /*#__PURE__*/_jsxDEV(Oval, {\n        className: \"Loader\",\n        secondaryColor: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WeatherCards, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"D3dnC9rwDJTF+jg0bYtvVgPknDE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/henrique.garcia/React JS Projects/weather_app/src/App.js"],"names":["WeatherCards","useEffect","useState","Oval","$","CountryDropdown","RegionDropdown","axios","App","weather","setWeather","country","setCountry","region","setRegion","time","setTime","fetchWeather","console","log","post","regionReq","countryReq","then","response","data","catch","error","getWeather","weatherApi","interval","setInterval","clearInterval","val","isEmptyObject"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport \"./App.css\";\r\nimport WeatherCards from \"./Components/weatherCards\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Oval } from \"react-loader-spinner\";\r\nimport $ from \"jquery\";\r\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  const [weather, setWeather] = useState({});\r\n  const [country, setCountry] = useState(\"PT\");\r\n  const [region, setRegion] = useState(\"Lisboa\");\r\n  const [time, setTime] = useState(0);\r\n\r\n  const fetchWeather = async () => {\r\n    console.log(country);\r\n\r\n    return axios\r\n      .post(\"http://localhost:8000/weather\", {\r\n        regionReq: `${region}`,\r\n        countryReq: `${country}`,\r\n      })\r\n      .then(async (response) => {\r\n        const data = await response.data;\r\n        console.log(data);\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error!\", error);\r\n      });\r\n  };\r\n\r\n  const getWeather = async () => {\r\n    const weatherApi = await fetchWeather();\r\n    setWeather(weatherApi);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //Clear weather array\r\n    setWeather({});\r\n\r\n    //API request for weather info\r\n    getWeather();\r\n\r\n    //Refresh page every 5 minutes\r\n    const interval = setInterval(() => {\r\n      setTime(time + 1);\r\n    }, 350000);\r\n    return () => clearInterval(interval);\r\n  }, [time, region]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1 className=\"Title\">WeatherApp</h1>\r\n      </header>\r\n      <h2 className=\"SubTitle\">5 Day Forecast</h2>\r\n      <h3 className=\"SelectRegion\">Select a region: </h3>\r\n      <div>\r\n        <CountryDropdown\r\n          valueType=\"short\"\r\n          value={country}\r\n          onChange={(val) => setCountry(val)}\r\n        />\r\n        <RegionDropdown\r\n          countryValueType=\"short\"\r\n          country={country}\r\n          value={region}\r\n          onChange={(val) => setRegion(val)}\r\n        />\r\n      </div>\r\n      <div className=\"Main\">\r\n        {$.isEmptyObject(weather) ? (\r\n          <Oval className=\"Loader\" secondaryColor=\"green\"></Oval>\r\n        ) : (\r\n          <WeatherCards weather={weather} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}